Разработка клиентского приложения для взаимодействия с сервером по протоколу FTP

Структура приложения: 
 
Главное окно: 
Кнопки "Регистрация" и "Авторизация". 
Окно регистрации: 
Форма для заполнения логина, пароля и роли (user или admin). 
Кнопка "Назад" для возврата на главное окно. 
Валидация форм для предотвращения ошибок ввода. 
Окно авторизации: 
Форма для ввода логина и пароля. 
Кнопка "Назад" для возврата на главное окно. 
Валидация форм для предотвращения ошибок ввода. 
Окно после входа: 
Форма поиска по названию файла. 
Кнопка для загрузки файлов с устройства на сервер или в базу данных. 
Список загруженных файлов с возможностью выбора нескольких файлов и кнопка "Скачать". 
Функционал для отображения статуса загрузки файлов.



короче, вот тема курсовой:
Разработка клиентского приложения для взаимодействия с сервером по протоколу FTP


нужно как я понял написать клиент
для проверки нужно также подключиться к серверу
я уже создал сервак через FileZilla Server
его данные:
address: 127.0.0.1
port: 21
Также пользователи хранятся на сервере
также там и прописаны попки для каждого пользователя, поэтому все местом хранения файлов проблема решена

теперь на счет саомго клиента, примерно так должен выглядеть:
Структура приложения: 
 
Главное окно: 
Кнопки "Регистрация" и "Авторизация". 
Окно регистрации: 
Форма для заполнения логина, пароля и роли (user или admin). 
Кнопка "Назад" для возврата на главное окно. 
Валидация форм для предотвращения ошибок ввода. 
Окно авторизации: 
Форма для ввода логина и пароля. 
Кнопка "Назад" для возврата на главное окно. 
Валидация форм для предотвращения ошибок ввода. 
Окно после входа: 
Форма поиска по названию файла. 
Кнопка для загрузки файлов с устройства на сервер или в базу данных. 
Список загруженных файлов с возможностью выбора нескольких файлов и кнопка "Скачать". 
Функционал для отображения статуса загрузки файлов.


уточнение для клиента
в чем смысл ролей, юзер обычный он может видеть список, а также скачивать файлы
а админ у него папка выбрана в которой все остальные папки юзеров и он там все, видеть список файлов, скачивыать их и то чем отличается от пользователей с ролью юзер, админ может загружать туда файлы

загрузка идет с устройства на сервеп
а скачать файлы идет скачка с выбраного файла на сервере на устройство 
в обоих случаях можно выбрать обзор куда сохрянть и от куда загружать


перед тем как начнем, нужно определитяс н каком языке будем писать!







Экран регистрации:

Пользователь вводит свои данные (например, имя пользователя и пароль).
После успешной регистрации данные пользователя сохраняются на сервере (в вашем случае, в FileZilla Server).

Экран авторизации:

Пользователь вводит свои учетные данные (имя пользователя и пароль).
Приложение проверяет введенные данные с теми, что хранятся на сервере.
Если авторизация успешна, пользователь переходит к следующему экрану.
Экран подключения к FTP-серверу:

После успешной авторизации пользователь вводит адрес сервера (например, 127.0.0.1) и порт (например, 21).
Приложение использует введенные данные для подключения к FTP-серверу с использованием учетных данных пользователя.





и так, что у нас имеется:
FileZilla Server
его данные:
address: 127.0.0.1
port: 21

а также нам нужен administration interface, для чего:
(не обязательно) для авторизации, чтобы проверить сущ ли пользователь. но как ужеи написал, это не обязательно, так как даже если и нету, то нас не пустит и выдас соответю окошко с предупреждением
теперь про регистрацию, оно нужно для нее чтобы создать пользователся, проверить свободно ли имя, в противном солучаем вывести "имя пользователя занято", а аткже при создании натсроить его под такие параметры:
Access mode установлен на Read only. Включена опция Create native directory if it does not exist с заданным путем, например: E:\programming\FTP_CLIENT\fils{имя_пользователя}.

а вот все что известно про administration interface:
для подключения нужен только host, port and password
хост: 127.0.0.1
порт: 14148
password: zxzx